/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MuscleAlignFrame.java
 *
 * Created on Sep 11, 2009, 1:57:44 PM
 */
package edu.unam.iimas.glocsa.glocser.exttool;

import edu.unam.iimas.alignment.ExternalAlignmentWrapperConfiguration;
import edu.unam.iimas.alignment.Muscle3Wrapper;
import edu.unam.iimas.alignment.Alignment;
import edu.unam.iimas.alignment.DynamicAlignment;
import edu.unam.iimas.alignment.NonSupportedAlignmentException;
import edu.unam.iimas.glocsa.glocser.GlocserFrame;
import java.io.BufferedInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringWriter;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author xaltonalli
 */
public class ExternalToolAlignFrame extends javax.swing.JFrame implements Runnable {

    private Properties configuration = null;
    private String configurationFileName = null;
    private String alignmentToolPath = null;
    private String alignmentToolOptions = null;
    private DynamicAlignment openDynamicAlignment = null;
    private GlocserFrame glocserFrame = null;

    /** Creates new form MuscleAlignFrame */
    public ExternalToolAlignFrame(Properties configuration, String configurationFileName, DynamicAlignment openAlignment, GlocserFrame glocserFrame) {
        this.configuration = configuration;
        this.configurationFileName = configurationFileName;
        this.alignmentToolPath = configuration.getProperty("alignmentToolPath");
        this.alignmentToolOptions = configuration.getProperty("alignmentToolOptions");
        this.openDynamicAlignment = openAlignment;
        this.glocserFrame = glocserFrame;

        initComponents();

        jTextFieldPath.setText(alignmentToolPath);
        jTextFieldOptions.setText(alignmentToolOptions);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButtonAlign = new javax.swing.JButton();
        jButtonDone = new javax.swing.JButton();
        jTextFieldPath = new javax.swing.JTextField();
        jTextFieldOptions = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonSaveOptions = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Align with MUSCLE");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButtonAlign.setText("Align");
        jButtonAlign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlignActionPerformed(evt);
            }
        });

        jButtonDone.setText("Done");
        jButtonDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDoneActionPerformed(evt);
            }
        });

        jLabel1.setText("Executable");

        jLabel2.setText("Parameters");

        jButtonSaveOptions.setText("Save path & options");
        jButtonSaveOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveOptionsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonSaveOptions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                        .addComponent(jButtonAlign)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDone))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldOptions, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                            .addComponent(jTextFieldPath, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDone)
                    .addComponent(jButtonAlign)
                    .addComponent(jButtonSaveOptions))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAlignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlignActionPerformed


        try {

            StringWriter stringWriter = new StringWriter();

            alignmentToolPath = jTextFieldPath.getText();
            alignmentToolOptions = jTextFieldOptions.getText();

            ExternalAlignmentWrapperConfiguration wrapperConfiguration = new ExternalAlignmentWrapperConfiguration(alignmentToolPath, alignmentToolOptions);
            Muscle3Wrapper wrapper = new Muscle3Wrapper(wrapperConfiguration);
            BufferedInputStream bufferedInputStream = wrapper.execExternalAlignmentToolStreams(openDynamicAlignment.getMinimalAlignment().getAlignmentFileString(), stringWriter);

            jTextArea1.setText(stringWriter.toString());
            Alignment openMinimalAlignment = new Alignment();
            openMinimalAlignment.readFilefromStream(bufferedInputStream);

            glocserFrame.setNewOpenDynamicAlignment(new DynamicAlignment(openMinimalAlignment));


        } catch (NonSupportedAlignmentException ex) {
            Logger.getLogger(ExternalToolAlignFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "The alignment returned by MUSCLE does not appear to be supported: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(ExternalToolAlignFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error executing MUSCLE: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        //this.dispose();

    }//GEN-LAST:event_jButtonAlignActionPerformed

    private void jButtonDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDoneActionPerformed
       
        this.dispose();

    }//GEN-LAST:event_jButtonDoneActionPerformed

    private void jButtonSaveOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveOptionsActionPerformed

        String newAlignmentToolPath = jTextFieldPath.getText();
        String newAlignmentToolOptions = jTextFieldOptions.getText();

        try {
            if ( newAlignmentToolPath.compareTo(alignmentToolPath)!=0 || newAlignmentToolOptions.compareTo(alignmentToolOptions)!=0) {
                configuration.setProperty("alignmentToolPath", newAlignmentToolPath);
                configuration.setProperty("alignmentToolOptions", newAlignmentToolOptions);
                configuration.store(new FileWriter(configurationFileName), "");
            }
        } catch (IOException ex) {
            Logger.getLogger(GlocserFrame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButtonSaveOptionsActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlign;
    private javax.swing.JButton jButtonDone;
    private javax.swing.JButton jButtonSaveOptions;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldOptions;
    private javax.swing.JTextField jTextFieldPath;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the openDynamicAlignment
     */
    public DynamicAlignment getOpenDynamicAlignment() {
        return openDynamicAlignment;
    }

    /**
     * @param openDynamicAlignment the openDynamicAlignment to set
     */
    public void setOpenDynamicAlignment(DynamicAlignment openDynamicAlignment) {
        this.openDynamicAlignment = openDynamicAlignment;
    }

    @Override
    public void run() {
        this.setVisible(rootPaneCheckingEnabled);
    }
}
