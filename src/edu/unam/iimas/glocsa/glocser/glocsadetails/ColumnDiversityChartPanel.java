/*
 * ColumnDiversityChartPanel.java
 *
 * Created on October 7, 2008, 2:09 AM
 */
package edu.unam.iimas.glocsa.glocser.glocsadetails;

import edu.unam.iimas.alignment.Alignment;
import edu.unam.iimas.alignment.glocsa.core.AminoacidsRatingConstants;
import edu.unam.iimas.alignment.glocsa.core.EventCount;
import edu.unam.iimas.alignment.glocsa.core.NucleotidesRatingConstants;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author  xaltonalli
 */
public class ColumnDiversityChartPanel extends javax.swing.JPanel {

    private JFreeChart chart = null;
    private Alignment alignment = null;
    private EventCount eventCount = null;

    /** Creates new form ColumnDiversityChartPanel */
    public ColumnDiversityChartPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public Alignment getAlignment() {
        return alignment;
    }

    public void setAlignment(Alignment alignment) {
        this.alignment = alignment;
    }
    
    public EventCount getEventCount() {
        return eventCount;
    }

    public void setEventCount(EventCount eventCount) {
        this.eventCount = eventCount;
    }
    
        boolean[] columnsHaveGaps(char[][] matrix) {
        
        int sequenceNumber = matrix.length;
        int maxPositions = matrix[0].length;
        boolean[] hasGap = new boolean[maxPositions];
        
        for(int i = 0 ; i < sequenceNumber ; i++) {
            
            for (int j = 0 ; j < maxPositions ; j++) {
                hasGap[j] = hasGap[j] || ( matrix[i][j] == Alignment.GAP ) ;
            }
            
        }
        
        return hasGap;
        
    }
        
     public void createChart() {

            
        int maxPositions = alignment.getMaxPositions();
        int[] differentBaseGap = new int[maxPositions];
        int[] eventsPerColumn = eventCount.getSubstitutionEventsPerColumn();
        char[][] matrix = alignment.getAlignedMatrix();
        boolean[] hasGap = columnsHaveGaps(matrix);
        int supportedCharactersNumber = 0;

        if (!alignment.isNucleotides()) {
            supportedCharactersNumber = AminoacidsRatingConstants.supportedCharacters.length;
        } else {
            supportedCharactersNumber = NucleotidesRatingConstants.supportedCharacters.length;
        }

        int[] differentCount = new int[supportedCharactersNumber];
        // 0 - 1 base/gap - o 0 diferencias
        // 1 - 2 base/gap - o 1 diferencias
        // 2 - 3 base/gap - o 2 diferencias
        // 3 - 4 base/gap - o 3 diferencias
        // 4 - 5 base/gap - o 4 diferencias

        for (int i = 0 ; i < maxPositions ; i++) {
            if ( hasGap[i] ) {
                differentBaseGap[i] = eventsPerColumn[i] + 2;
            } else {
                differentBaseGap[i] = eventsPerColumn[i] + 1;
            }

            differentCount[differentBaseGap[i]-1]++;
        }


        // create a dataset...
        DefaultPieDataset data = new DefaultPieDataset();
        data.setValue("One base/gap", new Double(differentCount[0]));
        data.setValue("Two bases/gap", new Double(differentCount[1]));
        data.setValue("Three bases/gap", new Double(differentCount[2]));
        data.setValue("Four bases/gap", new Double(differentCount[3]));
        data.setValue("Four bases and gap", new Double(differentCount[4]));

        // create the chart...
        chart = ChartFactory.createPieChart("Column Heterogeneity",  // chart title
                data,                // data
                true,                // include legend
                true,
                false
                );

        PiePlot plot = (PiePlot) chart.getPlot();
        plot.setLabelGenerator(new StandardPieSectionLabelGenerator("{0}"));
        plot.setLegendLabelGenerator(new StandardPieSectionLabelGenerator("{0} - {2} ({1} columns)"));
            
            
        
        ///////// GUI

        ChartPanel chartPanel = new ChartPanel(chart);

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(chartPanel);
        chartPanel.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
                panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 380, Short.MAX_VALUE));
        panel1Layout.setVerticalGroup(
                panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 280, Short.MAX_VALUE));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addContainerGap()));


    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
