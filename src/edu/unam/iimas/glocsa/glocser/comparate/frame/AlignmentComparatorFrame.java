/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AlignmentComparatorFrame.java
 *
 * Created on Oct 7, 2009, 8:36:18 PM
 */
package edu.unam.iimas.glocsa.glocser.comparate.frame;

import edu.unam.iimas.glocsa.glocser.GlocserFrame;
import edu.unam.iimas.glocsa.glocser.comparate.AlignmentComparator;
import edu.unam.iimas.glocsa.glocser.comparate.AlignmentDifference;
import edu.unam.iimas.glocsa.glocser.comparate.NotComparableAlignmentsException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author xaltonalli
 */
public class AlignmentComparatorFrame extends javax.swing.JFrame {

    private GlocserFrame gfAlignmentA;
    private GlocserFrame gfAlignmentB;

    /** Creates new form AlignmentComparatorFrame */
    public AlignmentComparatorFrame(GlocserFrame gfAlignmentA, GlocserFrame gfAlignmentB) {
        initComponents();
        this.gfAlignmentA = gfAlignmentA;
        this.gfAlignmentB = gfAlignmentB;
        populateDifferences();
    }

    private void populateDifferences() {
        jLabelAlignmentA.setText(gfAlignmentA.getSelectedFile().getName());
        jLabelAlignmentB.setText(gfAlignmentB.getSelectedFile().getName());

        DefaultTableModel defaultTableModel = new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "seq #", "base-index", "position in A", "size in A", "position in B", "size in B"
            }) {

            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };
        jTableAlignmentDifferences.setModel(defaultTableModel);

        Object[] rowData;
        try {
            ArrayList<ArrayList<AlignmentDifference>> alignmentDifferences = AlignmentComparator.compareAlignments(gfAlignmentA.getOpenDynamicAlignment(), gfAlignmentB.getOpenDynamicAlignment());

            for (ArrayList<AlignmentDifference> seqAlignmentDifferences : alignmentDifferences) {
                for (AlignmentDifference seqAlignmentDifference : seqAlignmentDifferences) {
                    rowData = new Object[6];
                    rowData[0] = seqAlignmentDifference.getSequenceNumber();
                    rowData[1] = seqAlignmentDifference.getSymbolIndex();
                    rowData[2] = seqAlignmentDifference.getPositionA();
                    rowData[3] = seqAlignmentDifference.getSizeA();
                    rowData[4] = seqAlignmentDifference.getPositionB();
                    rowData[5] = seqAlignmentDifference.getSizeB();
                    defaultTableModel.addRow(rowData);
                }
            }

        } catch (NotComparableAlignmentsException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage(), "Error:", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(AlignmentComparatorFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAlignmentDifferences = new javax.swing.JTable();
        jButtonRefresh = new javax.swing.JButton();
        jLabelAlignmentA = new javax.swing.JLabel();
        jLabelAlignmentB = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alignment Comparison");

        jTableAlignmentDifferences.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "seq #", "base-index", "position in A", "size in A", "position in B", "size in B"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAlignmentDifferences.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableAlignmentDifferences.getTableHeader().setReorderingAllowed(false);
        jTableAlignmentDifferences.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAlignmentDifferencesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableAlignmentDifferences);
        jTableAlignmentDifferences.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jButtonRefresh.setText("Refresh");
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        jLabelAlignmentA.setText("jLabelAlignmentA");

        jLabelAlignmentB.setText("jLabelAlignmentB");

        jLabel1.setText("A:");

        jLabel2.setText("B:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAlignmentB, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                            .addComponent(jLabelAlignmentA, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                    .addComponent(jButtonRefresh, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelAlignmentA))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabelAlignmentB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonRefresh)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        populateDifferences();
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void jTableAlignmentDifferencesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAlignmentDifferencesMouseClicked

        int selectedRow = jTableAlignmentDifferences.getSelectedRow();
        System.out.println("selectedRow " + selectedRow);

    }//GEN-LAST:event_jTableAlignmentDifferencesMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelAlignmentA;
    private javax.swing.JLabel jLabelAlignmentB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAlignmentDifferences;
    // End of variables declaration//GEN-END:variables
}
